[tool:pytest]
# Pytest configuration for Insider Test Automation Project

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --html=reports/html/report.html
    --self-contained-html
    --json-report
    --json-report-file=reports/json/report.json
    --maxfail=5
    --disable-warnings

# Markers
markers =
    smoke: Smoke tests - critical functionality
    regression: Regression tests - full test suite
    critical: Critical priority tests (P1)
    high: High priority tests (P2)
    medium: Medium priority tests (P3)
    low: Low priority tests (P4)
    browser_chrome: Tests specific to Chrome browser
    browser_firefox: Tests specific to Firefox browser
    browser_safari: Tests specific to Safari browser
    mobile: Mobile device tests
    tablet: Tablet device tests
    performance: Performance tests
    ui: User interface tests
    functional: Functional tests
    browser: Cross-browser test cases
    negative: Negative test cases
    edge_case: Edge case scenarios
    cross_browser: Cross-browser compatibility tests
    responsive: Responsive design tests
    accessibility: Accessibility tests
    memory: Memory leak tests
    slow: Tests that take longer than 30 seconds

# Test timeout
timeout = 300

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage settings (if using pytest-cov)
# addopts = --cov=pages --cov=utils --cov-report=html --cov-report=term-missing

# Parallel execution settings (if using pytest-xdist)
# addopts = -n auto

# Test order randomization (if using pytest-randomly)
# addopts = --randomly-seed=12345